@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":StoreMandoParser" as StoreMandoParser LOGIC_COLOR
participant ":FindCommandParser" as FindCommandParser LOGIC_COLOR
participant "command:FindCommand" as FindCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("find */cheese egg")
activate LogicManager

LogicManager -> StoreMandoParser : parseCommand("find */cheese egg")
activate StoreMandoParser

create FindCommandParser
StoreMandoParser -> FindCommandParser
activate FindCommandParser

FindCommandParser --> StoreMandoParser
deactivate FindCommandParser

StoreMandoParser -> FindCommandParser : parse("*/cheese egg")
activate FindCommandParser

create FindCommand
FindCommandParser -> FindCommand
activate FindCommand

FindCommand --> FindCommandParser : command
deactivate FindCommand

FindCommandParser --> StoreMandoParser : command
deactivate FindCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
FindCommandParser -[hidden]-> StoreMandoParser
destroy FindCommandParser

StoreMandoParser --> LogicManager : command
deactivate StoreMandoParser

LogicManager -> FindCommand : execute(model)
activate FindCommand

FindCommand -> Model : updateCurrentPredicate(["cheese", "egg"])
activate Model

Model --> FindCommand
deactivate Model

FindCommand -> Model : getCurrentPredicate()
activate Model

Model --> FindCommand : ["cheese", "egg"]
deactivate Model

FindCommand -> Model : updateFilteredItemList(["cheese", "egg"])
activate Model

Model --> FindCommand
deactivate Model

create CommandResult
FindCommand -> CommandResult
activate CommandResult

CommandResult --> FindCommand : result
deactivate CommandResult

FindCommand --> LogicManager : result
deactivate FindCommand

[<--LogicManager : result
deactivate LogicManager
@enduml
